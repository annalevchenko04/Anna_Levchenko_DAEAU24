-- Retrieve the top three employees who generated the most revenue in 2017
SELECT 
    s.staff_id,  -- Select the staff ID for reference
    CONCAT(UPPER(s.first_name), ' ', UPPER(s.last_name)) AS staff_name,  -- Concatenate first and last names of the staff, using UPPER for consistency
    SUM(p.amount) AS total_revenue,  -- Calculate total revenue generated by each staff member
    -- Subquery to get the last store where the staff worked based on the latest payment date
    (SELECT st.store_id  
     FROM public.store AS st
     INNER JOIN public.payment AS pay ON pay.staff_id = s.staff_id  -- Join to ensure we get the correct store for this staff member
     WHERE pay.payment_date = (
         SELECT MAX(payment_date)  -- Get the latest payment date for the staff member
         FROM public.payment
         WHERE staff_id = s.staff_id
     )
     LIMIT 1) AS last_store_id  -- Select the last store worked at
FROM public.payment AS p  -- Added schema prefix
INNER JOIN public.staff AS s ON p.staff_id = s.staff_id  -- Determine which staff processed the payments
WHERE p.payment_date >= '2017-01-01' AND p.payment_date < '2018-01-01'  -- Filter for payments made in the year 2017
GROUP BY s.staff_id, s.first_name, s.last_name  -- Group by staff ID and names to aggregate revenue
ORDER BY total_revenue DESC  -- Sort by total revenue in descending order to get the top three employees
LIMIT 3;  -- Limit to top 3 employees
